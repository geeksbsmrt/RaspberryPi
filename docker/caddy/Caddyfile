# Refer to the Caddy docs for more information:
# https://caddyserver.com/docs/caddyfile

{
    # Global options

    # Monitoring
    admin :2019
    metrics {
        per_host
    }
}

(logging) {
    log {
        output file /data/logs/{args[0]}.log {
            roll_size 10mb
            roll_keep 5
            roll_local_time
        }
        format console
        level INFO
    }
}

# Global Imports
(all) {
    # Caddy-generated error handling (e.g., from file_server)
    handle_errors {
        # Catch all 4xx errors and serve the dynamic 404.html page
        @4xx expression {error.status_code} >= 400 && {error.status_code} < 500
        handle @4xx {
            status {error.status_code} # Keep the specific status code Caddy generated
            rewrite * /404.html # Serve the dynamic 404 page
            templates
            file_server { root /srv/error-pages }
        }

        # Catch all 5xx errors and serve the dynamic 5xx.html page
        @5xx expression {error.status_code} >= 500 && {error.status_code} < 600
        handle @5xx {
            status {error.status_code} # Keep the specific status code Caddy generated
            rewrite * /5xx.html # Serve the dynamic 5xx page
            templates
            file_server { root /srv/error-pages }
        }
    }

    # Upstream-generated error handling for reverse_proxy
    handle_response {
        # Catch all 4xx errors from upstream and serve the dynamic 404.html page
        @upstream_4xx status 400-499
        handle @upstream_4xx {
            status {http.response.status_code} # Use the upstream's specific status code
            rewrite * /404.html # Serve the dynamic 404 page
            templates
            file_server { root /srv/error-pages }
        }

        # Catch all 5xx errors from upstream and serve the dynamic 5xx.html page
        @upstream_5xx status 500-599
        handle @upstream_5xx {
            status {http.response.status_code} # Use the upstream's specific status code
            rewrite * /5xx.html # Serve the dynamic 5xx page
            templates
            file_server { root /srv/error-pages }
        }
    }
}

# Default options for internal facing sites
(home) {
    import all
    tls internal
}

grafana.home {
    import home
    # import logging grafana.home
    reverse_proxy http://{$IP_GRAFANA}:3000
}

uptime.home {
    import home
    # import logging uptime.home
    reverse_proxy http://{$IP_UPTIME_KUMA}:3001
}

# Default options for external facing sites
(external) {
    import all

    tls {
        dns cloudflare {env.CLOUDFLARE_API_TOKEN}
    }

    header {
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        X-Xss-Protection "1; mode=block"
        X-Content-Type-Options "nosniff"
        X-Frame-Options "DENY"
        Content-Security-Policy "upgrade-insecure-requests"
        Referrer-Policy "strict-origin-when-cross-origin"
        Cache-Control "public, max-age=15, must-revalidate"
        Permissions-Policy "accelerometer=(), ambient-light-sensor=(), autoplay=(self), camera=(), encrypted-media=(), fullscreen=(self), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), midi=(), payment=(), picture-in-picture=(*), speaker-selection=(), usb=(), xr-spatial-tracking=()"
        [defer]
    }
    file_server
}

(geeksbsmrt) {
    import external
}

geeksbsmrt.com {
    import geeksbsmrt
    # import logging geeksbsmrt.com
    root * /srv/geeksbsmrt.com
}

analytics.geeksbsmrt.com {
    import geeksbsmrt
    # import logging analytics.geeksbsmrt.com
    reverse_proxy http://{$IP_UMAMI_APP}:3000
}

*.geeksbsmrt.com {
    import geeksbsmrt
    # import logging wildcard.geeksbsmrt.com
}

(smrtgeekdevs) {
    import external
}

smrtgeekdevs.com {
    import smrtgeekdevs # Inherit `external` config here
    # import logging smrtgeekdevs.com
    #root * /var/www/smrtgeekdevs
}

pihole.smrtgeekdevs.com {
    import smrtgeekdevs
    # import logging pihole.smrtgeekdevs.com
    @atRoot {
        path /
    }
    redir @atRoot /admin/ 302

    reverse_proxy http://{$IP_PIHOLE}
}

*.smrtgeekdevs.com {
    import smrtgeekdevs
    # import logging wildcard.smrtgeekdevs.com
}
