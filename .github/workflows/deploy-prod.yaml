name: Deploy Docker Stack to Prod

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Prod
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Verify SOPS and age installation on runner
        run: |
          echo "Checking SOPS version..."
          sops --version --check-for-updates
          echo "Checking age version..."
          age --version

      - name: Decrypt secrets.sops.env to .env file on Pi
        env:
          SOPS_AGE_KEY: ${{ secrets.RUNNER_AGE_PRIVATE_KEY }}
          TARGET_ENV_FILE: ${{ secrets.DOCKER_DIR }}/.env
          # Using an intermediate env var for the target file path for clarity in the script
        run: |
          echo "Decrypting secrets from $GITHUB_WORKSPACE/secrets.sops.env to ${TARGET_ENV_FILE}"
          sudo -E sops --decrypt "$GITHUB_WORKSPACE/secrets.sops.env" > "${TARGET_ENV_FILE}"
          sudo -E chmod 600 "${TARGET_ENV_FILE}"
          echo ".env file created at ${TARGET_ENV_FILE} with restricted permissions."

      - name: List Repository Contents for Debugging
        run: |
          echo "--- Current Directory (should be GITHUB_WORKSPACE root) ---"
          pwd
          echo "--- Listing GITHUB_WORKSPACE (repository root) ---"
          ls -R $GITHUB_WORKSPACE
          echo "--- Checking expected template path specifically ---"
          EXPECTED_TEMPLATE_PATH="$GITHUB_WORKSPACE/docker/prometheus/config/prometheus.yml.template"
          echo "Workflow expects template at: ${EXPECTED_TEMPLATE_PATH}"
          if [ -f "${EXPECTED_TEMPLATE_PATH}" ]; then
            echo "DEBUG: TEMPLATE FILE FOUND at expected path."
          else
            echo "DEBUG: TEMPLATE FILE ***NOT FOUND*** at expected path."
            echo "--- Listing contents of $GITHUB_WORKSPACE/docker/prometheus/config/ (if it exists) ---"
            ls -l $GITHUB_WORKSPACE/docker/prometheus/config/ || echo "DEBUG: Directory $GITHUB_WORKSPACE/docker/prometheus/config/ not found or cannot be listed."
            echo "--- Listing contents of $GITHUB_WORKSPACE/docker/prometheus/ ---"
            ls -l $GITHUB_WORKSPACE/docker/prometheus/ || echo "DEBUG: Directory $GITHUB_WORKSPACE/docker/prometheus/ not found."
            echo "--- Listing contents of $GITHUB_WORKSPACE/docker/ ---"
            ls -l $GITHUB_WORKSPACE/docker/ || echo "DEBUG: Directory $GITHUB_WORKSPACE/docker/ not found."
          fi

      - name: Prepare Docker Configurations (Template Prometheus Config)
        env:
          DOCKER_CONFIG_TARGET_DIR: ${{ secrets.DOCKER_DIR }} # For the .env file path
        run: |
          echo "Sourcing environment variables from ${DOCKER_CONFIG_TARGET_DIR}/.env"
          set -a # Automatically export all variables from sourced file
          if [ -f "${DOCKER_CONFIG_TARGET_DIR}/.env" ]; then
            source "${DOCKER_CONFIG_TARGET_DIR}/.env"
          else
            echo "ERROR: .env file not found at ${DOCKER_CONFIG_TARGET_DIR}/.env. Cannot proceed with templating."
            exit 1 # Exit if .env file is crucial and not found
          fi
          set +a

          # Define input and output paths using GITHUB_WORKSPACE directly
          INPUT_TEMPLATE_PATH="$GITHUB_WORKSPACE/docker/prometheus/config/prometheus.yml.template"
          OUTPUT_PROCESSED_PATH="$GITHUB_WORKSPACE/docker/prometheus/config/prometheus.yml"

          echo "Templating Prometheus configuration..."
          echo "Input template: ${INPUT_TEMPLATE_PATH}"
          echo "Output file: ${OUTPUT_PROCESSED_PATH}"

          # Check if the template file actually exists before trying to use it
          if [ ! -f "${INPUT_TEMPLATE_PATH}" ]; then
            echo "ERROR: Template file NOT FOUND at ${INPUT_TEMPLATE_PATH}"
            echo "Listing contents of $GITHUB_WORKSPACE/docker/prometheus/config/ for debugging:"
            ls -la "$GITHUB_WORKSPACE/docker/prometheus/config/" || echo "Could not list directory."
            exit 1
          fi

          # Perform the substitution
          # All variables sourced from .env should now be available in the environment for envsubst
          envsubst < "${INPUT_TEMPLATE_PATH}" > "${OUTPUT_PROCESSED_PATH}"

          if [ $? -eq 0 ]; then
            echo "Prometheus configuration templated successfully to ${OUTPUT_PROCESSED_PATH}"
          else
            echo "ERROR: envsubst command failed."
            exit 1
          fi

      - name: Sync configuration files
        run: |
          echo "Syncing repository contents to ${{ secrets.DOCKER_DIR }}"
          rsync -av --checksum \
            "$GITHUB_WORKSPACE/docker/" \
            "${{ secrets.DOCKER_DIR }}/" \
            --exclude ".git/" \
            --exclude ".github/" \
            --exclude "*.sops.env"

      - name: Navigate to Docker Compose directory
        run: cd "${{ secrets.DOCKER_DIR }}"

      - name: Pull latest Docker images
        run: |
          cd "${{ secrets.DOCKER_DIR }}"
          sudo docker compose pull

      - name: Apply Docker Compose changes
        run: |
          cd "${{ secrets.DOCKER_DIR }}"
          sudo docker compose up -d --remove-orphans

      - name: Prune unused Docker images
        if: success()
        run: |
          echo "Pruning unused Docker images..."
          sudo docker image prune -af
